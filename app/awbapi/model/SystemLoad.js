/*
 * Agent.Workbench REST - API
 * This is the REST-API for Agent.Workbench in an embbedded system mode.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: admin@enflex.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The SystemLoad model module.
 * @module model/SystemLoad
 * @version 1.0.0
 */
export class SystemLoad {
  /**
   * Constructs a new <code>SystemLoad</code>.
   * The systems current load, includung CPU, memoryand HEAP  usage. Further, the number of Java threads are returned.
   * @alias module:model/SystemLoad
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>SystemLoad</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SystemLoad} obj Optional instance to populate.
   * @return {module:model/SystemLoad} The populated <code>SystemLoad</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SystemLoad();
      if (data.hasOwnProperty('cpuUsage'))
        obj.cpuUsage = ApiClient.convertToType(data['cpuUsage'], 'Number');
      if (data.hasOwnProperty('memUsage'))
        obj.memUsage = ApiClient.convertToType(data['memUsage'], 'Number');
      if (data.hasOwnProperty('heapUsage'))
        obj.heapUsage = ApiClient.convertToType(data['heapUsage'], 'Number');
    }
    return obj;
  }
}

/**
 * The CPU usage in percent
 * @member {Number} cpuUsage
 */
SystemLoad.prototype.cpuUsage = undefined;

/**
 * The memory usage in percent
 * @member {Number} memUsage
 */
SystemLoad.prototype.memUsage = undefined;

/**
 * The Heap usage in percen
 * @member {Number} heapUsage
 */
SystemLoad.prototype.heapUsage = undefined;

