/*
 * Agent.Workbench REST - API
 * This is the REST-API for Agent.Workbench in an embbedded system mode.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: admin@enflex.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import { ApiClient } from "../ApiClient";
import { ExecutionState } from '../model/ExecutionState';
import { SystemInformation } from '../model/SystemInformation';
import { SystemLoad } from '../model/SystemLoad';

/**
* Admins service.
* @module api/AdminsApi
* @version 1.0.0
*/
export class AdminsApi {

  /**
  * Constructs a new AdminsApi. 
  * @alias module:api/AdminsApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instanc
  e} if unspecified.
  */
  constructor(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;
  }

  /**
   * Callback function to receive the result of the infoGet operation.
   * @callback moduleapi/AdminsApi~infoGetCallback
   * @param {String} error Error message, if any.
   * @param {module:model/SystemInformation{ data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Returns system information
   * Returns Hardware and system  inforamtion. 
   * @param {module:api/AdminsApi~infoGetCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
   */
  infoGet(callback) {

    let postBody = null;

    let pathParams = {

    };
    let queryParams = {

    };
    let headerParams = {

    };
    let formParams = {

    };

    let authNames = ['AwbApiKey'];
    let contentTypes = [];
    let accepts = ['applicaion/json'];
    let returnType = SystemInformation;

    return this.apiClient.callApi(
      '/info', 'GET',
      pathParams, queryParams, headerParams, formParams, postBody,
      authNames, contentTypes, accepts, returnType, callback
    );
  }
  /**
   * Callback function to receive the result of the loadGet operation.
   * @callback moduleapi/AdminsApi~loadGetCallback
   * @param {String} error Error message, if any.
   * @param {module:model/SystemLoad{ data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Returns the current System load
   * Returns the current system load measured by Agent.Workbench that includes CPU-, memory- and Java Heap - load. Further, the number of threads and agents will be returnes 
   * @param {module:api/AdminsApi~loadGetCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
   */
  loadGet(callback) {

    let postBody = null;

    let pathParams = {

    };
    let queryParams = {

    };
    let headerParams = {

    };
    let formParams = {

    };

    let authNames = ['AwbApiKey'];
    let contentTypes = [];
    let accepts = ['applicaion/json'];
    let returnType = SystemLoad;

    return this.apiClient.callApi(
      '/load', 'GET',
      pathParams, queryParams, headerParams, formParams, postBody,
      authNames, contentTypes, accepts, returnType, callback
    );
  }
  /**
   * Callback function to receive the result of the stateGet operation.
   * @callback moduleapi/AdminsApi~stateGetCallback
   * @param {String} error Error message, if any.
   * @param {module:model/ExecutionState{ data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Returns the current AWB state
   * Returns the current state of Agent.Workbench consisiting information  about the execution mode, the currently open project and other. 
   * @param {module:api/AdminsApi~stateGetCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
   */
  stateGet(callback) {

    let postBody = null;

    let pathParams = {

    };
    let queryParams = {

    };
    let headerParams = {

    };
    let formParams = {

    };

    let authNames = ['AwbApiKey'];
    let contentTypes = [];
    let accepts = ['applicaion/json'];
    let returnType = ExecutionState;

    return this.apiClient.callApi(
      '/state', 'GET',
      pathParams, queryParams, headerParams, formParams, postBody,
      authNames, contentTypes, accepts, returnType, callback
    );
  }

}